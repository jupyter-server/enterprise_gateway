name: Builds
on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      ASYNC_TEST_TIMEOUT: 30
      CONDA_HOME: /usr/share/miniconda
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          clean: true
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - name: Display dependency info
        run: |
          python --version
          pip --version
          conda --version
      - name: Add SBT launcher
        run: |
          mkdir -p $HOME/.sbt/launchers/1.3.12
          curl -L -o $HOME/.sbt/launchers/1.3.12/sbt-launch.jar https://repo1.maven.org/maven2/org/scala-sbt/sbt-launch/1.3.12/sbt-launch.jar
      - name: Install Python dependencies
        run: |
          pip install ".[test]"
      - name: Build and install Jupyter Enterprise Gateway
        uses: nick-invision/retry@v3.0.0
        with:
          timeout_minutes: 10
          max_attempts: 2
          command: |
            make clean dist enterprise-gateway-demo test-install-wheel
      - name: Log current Python dependencies version
        run: |
          pip freeze
      - name: Run unit tests
        uses: nick-invision/retry@v3.0.0
        with:
          timeout_minutes: 3
          max_attempts: 1
          command: |
            make test
      - name: Run integration tests
        run: |
          make itest-yarn
      - name: Collect logs
        if: success() || failure()
        run: |
          python --version
          pip --version
          pip list
          docker logs itest-yarn
      - name: Run linters
        run: |
          make lint
      - name: Bump versions
        run: |
          pipx run tbump --dry-run --no-tag --no-push 100.100.100rc0

  link_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyterlab/maintainer-tools/.github/actions/check-links@v1
        with:
          ignore_links: "http://my-gateway-server.com:8888"

  build_docs:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - name: Build Docs
        run: make docs

  test_minimum_versions:
    name: Test Minimum Versions
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
        with:
          python_version: "3.8"
      - uses: jupyterlab/maintainer-tools/.github/actions/install-minimums@v1
      - name: Run the unit tests
        run: |
          pytest -vv -W default || pytest -vv -W default --lf

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyterlab/maintainer-tools/.github/actions/make-sdist@v1

  test_sdist:
    runs-on: ubuntu-latest
    needs: [make_sdist]
    name: Install from SDist and Test
    timeout-minutes: 20
    steps:
      - uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
      - uses: jupyterlab/maintainer-tools/.github/actions/test-sdist@v1

  python_tests_check: # This job does nothing and is only used for the branch protection
    if: always()
    needs:
      - build
      - link_check
      - test_minimum_versions
      - build_docs
      - test_sdist
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
