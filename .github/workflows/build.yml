name: Builds
on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      ASYNC_TEST_TIMEOUT: 30
      CONDA_HOME: /usr/share/miniconda
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [ '3.6', '3.7', '3.8', '3.9' ]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        clean: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Display dependency info
      run: |
        python --version
        pip --version
        conda --version
    - name: Add SBT launcher
      run: |
        mkdir -p $HOME/.sbt/launchers/1.3.12
        curl -L -o $HOME/.sbt/launchers/1.3.12/sbt-launch.jar https://repo1.maven.org/maven2/org/scala-sbt/sbt-launch/1.3.12/sbt-launch.jar
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade setuptools pip websocket-client flake8 pytest pytest-tornasync ipykernel coverage codecov
    - name: Build Jupyter Enterprise Gateway conda env
      run: |
        SA="source $CONDA_HOME/bin/activate" make env
    - name: Build and install Jupyter Enterprise Gateway
      uses: nick-invision/retry@v1.0.0
      with:
        timeout_minutes: 10
        max_attempts: 2
        command: |
          SA="source $CONDA_HOME/bin/activate" make clean dist enterprise-gateway-demo
          python -m pip install --upgrade dist/*.whl
    - name: Log current Python dependencies version
      run: |
        pip freeze
    - name: Log current Enterprise Gateway version
      run: |
        jupyter enterprisegateway --help
    - name: Run tests
      uses: nick-invision/retry@v1.0.0
      with:
        timeout_minutes: 3
        max_attempts: 1
        command: |
          pytest -v -s enterprise_gateway/tests
    - name: Run integration tests
      run: |
        SA="source $CONDA_HOME/bin/activate" make itest-yarn
    - name: Collect logs
      run: |
        python --version
        pip --version
        pip list
        docker logs itest-yarn
