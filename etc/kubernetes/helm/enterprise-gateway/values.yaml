# Enterprise Gateway image name and tag to use.
image: elyra/enterprise-gateway:dev
# Enterprise Gateway image pull policy.
imagePullPolicy: IfNotPresent
# The primary port on which Enterprise Gateway is servicing requests.
port: 8888
# Update to deploy multiple replicas of EG.
replicas: 1
# Log output level.
logLevel: DEBUG
# Whether to mirror working directories.
mirrorWorkingDirs: false
# Master public IP on which to expose EG.
k8sMasterPublicIP:

kernel:
  # Kernel cluster role created by this chart.
  clusterRole: kernel-controller
  # Will start kernels in the same namespace as EG if True.
  shareGatewayNamespace: false
  # Timeout for kernel launching in seconds.
  launchTimeout: 60
  # Timeout for an idle kernel before its culled in seconds. Default is 1 hour.
  cullIdleTimeout: 3600
  # List of kernel names that are available for use.
  whitelist:
    - r_kubernetes
    - python_kubernetes
    - python_tf_kubernetes
    - python_tf_gpu_kubernetes
    - scala_kubernetes
    - spark_r_kubernetes
    - spark_python_kubernetes
    - spark_scala_kubernetes
  # Default kernel name should be something from the whitelist
  defaultKernelName: python_kubernetes

kernelspecs:
  # Optional custom data image containing kernelspecs to use.
  image:
  # Kernelspecs image pull policy.
  imagePullPolicy: Always

nfs:
  enabled: false
  # IP address of NFS server. Required if enabled.
  internalServerIPAddress:

ingress:
  enabled: false

  # Ingress resource host
  hostName: ""

  # Ingress resource annotations to be included depending in ingress controller.
  traefik:
    enabled: true
    path: /gateway
    annotations:
      kubernetes.io/ingress.class: "traefik"
      traefik.frontend.rule.type: PathPrefixStrip

  nginx:
    enabled: false
    path: /gateway/?(.*)
    annotations:
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"

# Kernel Image Puller (daemonset)
kip:
  enabled: true
  # Kernel Image Puller image name and tag to use.
  image: elyra/kernel-image-puller:dev
  # Kernel Image Puller image pull policy.
  imagePullPolicy: IfNotPresent
  # Determines whether the Kernel Image Puller will pull kernel images it has previously pulled
  pullPolicy: IfNotPresent
  # The interval (in seconds) at which the Kernel Image Puller fetches kernelspecs to pull kernel images.
  interval: 300


