# This file defines the Kubernetes objects necessary for Enterprise Gateway to run within Kubernetes.
#
apiVersion: v1
kind: Namespace
metadata:
  name: enterprise-gateway
  labels:
    app: enterprise-gateway
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: enterprise-gateway
  labels:
    app: enterprise-gateway
subjects:
  - kind: ServiceAccount
    name: default
    namespace: enterprise-gateway
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
# Kernelspecs can be exposed via a PersistentVolume (and corresponding PersistentVolumeClaim).  Below
# is an example of such a PV relative to NFS.  It requires that all nodes within the Kubernetes cluster
# are mounting the NFS directory from the specified server.  To enable this functionality, uncomment the
# corresponding stanzas for PersistentVolume, PersistentVolumeClaim, and the volumeMounts and volumes
# stanzas in the Enterprise-Gateway deployment.  In addition, the volumeMounts and volumes stanzas
# in any kernel-pod.yaml files (e.g., python_kubernetes) should also be uncommented.
#
#kind: PersistentVolume
#apiVersion: v1
#metadata:
#  name: kernelspecs-pv
#  labels:
#    app: enterprise-gateway
#spec:
#  capacity:
#    storage: 10Mi
#  accessModes:
#    - ReadOnlyMany
#  nfs:
#    server: <IPv4>
#    path: /usr/local/share/jupyter/kernels
#---
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: kernelspecs-pvc
#  labels:
#    app: enterprise-gateway
#spec:
#  accessModes:
#    - ReadOnlyMany
#  resources:
#    requests:
#      storage: 10Mi
#  selector:
#    matchLabels:
#      app: enterprise-gateway
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: enterprise-gateway
    component: enterprise-gateway
  name: enterprise-gateway
  namespace: enterprise-gateway
spec:
  ports:
  - name: http
    port: 8888
    targetPort: 8888
  selector:
    gateway-selector: enterprise-gateway
  sessionAffinity: ClientIP
  type: NodePort
# Uncomment in order to use <k8s-master>:8888
#  externalIPs:
#  - k8s-master-public-ip
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: enterprise-gateway
  namespace: enterprise-gateway
  labels:
    gateway-selector: enterprise-gateway
    app: enterprise-gateway
    component: enterprise-gateway
spec:
# Uncomment/Update to deploy multiple replicas of EG
#  replicas: 1
  selector:
    matchLabels:
      gateway-selector: enterprise-gateway
  template:
    metadata:
      labels:
        gateway-selector: enterprise-gateway
        app: enterprise-gateway
        component: enterprise-gateway
    spec:
      containers:
      - env:
        - name: EG_KUBERNETES_NAMESPACE
          value: "enterprise-gateway"
        - name: EG_TUNNELING_ENABLED
          value: "False"
        - name: EG_CULL_IDLE_TIMEOUT
          value: "600"
        - name: EG_LOG_LEVEL
          value: "DEBUG"
        - name: EG_KERNEL_LAUNCH_TIMEOUT
          value: "60"
        - name: EG_KERNEL_WHITELIST
          value: "['r_kubernetes','python_kubernetes','python_tf_kubernetes','scala_kubernetes','spark_r_kubernetes','spark_python_kubernetes','spark_scala_kubernetes']"
        image: elyra/kubernetes-enterprise-gateway:dev
        name: enterprise-gateway
        args: ["--elyra"]
        ports:
        - containerPort: 8888
# Uncomment to enable PV for kernelspecs
#        volumeMounts:
#        - mountPath: /usr/local/share/jupyter/kernels
#          name: kernelspecs
#      volumes:
#      - name: kernelspecs
#        persistentVolumeClaim:
#          claimName: kernelspecs-pvc
