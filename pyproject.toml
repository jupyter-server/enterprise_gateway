[build-system]
requires = ["hatchling>=1.5"]
build-backend = "hatchling.build"

[project]
name = "jupyter_enterprise_gateway"
version = "3.1.0.dev0"
description = "A web server for spawning and communicating with remote Jupyter kernels"
license = { file = "LICENSE.md" }
keywords = ["Interactive","Interpreter","Kernel", "Web", "Cloud"]
classifiers = [
  "Intended Audience :: Developers", "Intended Audience :: Science/Research",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10"
]
requires-python = ">=3.7"
dependencies = [
  "docker>=3.5.0",
  "future",
  "jinja2>=3.1",
  "jupyter_client>=6.1.12,<7",  # Remove cap once EG supports kernel provisioners
  "jupyter_core>=4.7.0",
  "kubernetes>=18.20.0",
  "jupyter_server>=1.3,<2.0",  # Remove cap (increase floor) once EG suport kernel provisioners
  "paramiko>=2.11",
  "pexpect>=4.8.0",
  "pycryptodomex>=3.9.7",
  "pyzmq>=17.0",
  "requests>=2.14.2",
  "tornado>=6.1",
  "traitlets>=5.3.0",
  "watchdog>=2.1.3",
  "yarn-api-client>=1.0"
]

[[project.authors]]
name = "Jupyter Development Team"
email = "jupyter@googlegroups.com"

[project.readme]
text = "A lightweight, multi-tenant, scalable, and secure gateway that enables\nJupyter Notebooks to share resources across distributed clusters such as\nApache Spark, Kubernetes and others."
content-type = "text/plain"

[project.urls]
Homepage = "http://github.com/jupyter/enterprise_gateway"

[project.optional-dependencies]
test = [
  "coverage",
  "pytest",
  "pytest-tornasync",
  "ipykernel",
  "pre-commit",
  "websocket-client"
]

[project.scripts]
jupyter-enterprisegateway = "enterprise_gateway.enterprisegatewayapp:launch_instance"

[tool.hatch.build.targets.wheel]
include = ["enterprise_gateway"]

[tool.tbump.version]
current = "3.1.0.dev0"
regex = '''
  (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)
  ((?P<channel>a|b|rc|.dev)(?P<release>\d+))?
'''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "enterprise_gateway/_version.py"

[[tool.tbump.file]]
src = "pyproject.toml"

[[tool.tbump.file]]
src = "Makefile"

[[tool.tbump.file]]
src = "etc/kubernetes/helm/enterprise-gateway/Chart.yaml"
search = 'appVersion: {current_version}'

[[tool.tbump.field]]
name = "channel"
default = ""

[[tool.tbump.field]]
name = "release"
default = ""

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules"
testpaths = [
    "enterprise_gateway/tests/"
]
filterwarnings = [
  "error",
  "ignore:There is no current event loop:DeprecationWarning",
  "ignore:Passing unrecognized arguments to super:DeprecationWarning:jupyter_client",
  "ignore:Jupyter is migrating its paths to use standard platformdirs:DeprecationWarning",
]

[tool.flake8]
ignore = "E501, W503, E402"
builtins = "c, get_config"
exclude = [
    ".cache",
    ".github",
    "docs",
]
enable-extensions = "G"
extend-ignore = [
    "G001", "G002", "G004", "G200", "G201", "G202",
    # black adds spaces around ':'
    "E203",
]
per-file-ignores = [
    # B011: Do not call assert False since python -O removes these calls
    # F841 local variable 'foo' is assigned to but never used
    "enterprise_gateway/tests/*: B011", "F841",
]
